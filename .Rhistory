`2017Q1.capitalbikeshare.tripdata` <- read.csv("~/R/dc bikeshare/2017Q1-capitalbikeshare-tripdata.csv")
View(`2017Q1.capitalbikeshare.tripdata`)
bike <- 2017Q1.capitalbikeshare.tripdata`
bike <- `2017Q1.capitalbikeshare.tripdata`
sum(bike$Duration)
hist(bike$Duration)
#By data
library(tidyverse)
install.packages("tidyverse")
table(bike$Member.type)
bike %>%
count(End.Date)
library(dplyr)
bike %>%
count(End.Date)
bike %>%
count(End.date)
bike %>%
group_by(End.date)
bike %>%
group_by(End.date) %>%
summarize(trips = count(End.date))
bike %>%
group_by(End.date) %>%
summarize(trips = End.date)
bike %>%
group_by(End.date) %>%
summarize(trips = tally(End.date))
bike %>% count(End.date)
install.packages("lubridate")
library(lubridate)
as_datetime(bike$End.date)
bike$dt <- as_datetime(bike$End.date)
date(bike$dt)
bike$dt <- date(as_datetime(bike$End.date))
bike %>% count(dt)
date_agg <- bike %>% count(dt)
plot(x= dt, y=n)
plot(x= bike$dt, y=bike$n)
plot(x= bike$dt, y=bike$n)
plot(x= date_agg$dt, y=date_agg$n)
library(ggplot2)
ggplot(date_agg, aes(x = dt, y = n)) + geom_point()
ggplot(date_agg, aes(x = dt, y = n, linetype = 1)) + geom_point()
ggplot(date_agg, aes(x = dt, y = n)) + geom_point()
ggplot(date_agg, aes(x = dt, y = n)) + geom_point(linetype = 1)
ggplot(date_agg, aes(x = dt, y = n)) + geom_point() + geom_line()
install.packages("CalendR")
install.packages("calendR")
library(calendR)
calendR(year = 2017,
start = "S")
ggplot(date_agg, aes(x = dt, y = n)) + geom_point() + geom_line()
calendR(year = 2017,
start = "S",
month = c(1,2,3,4))
#CalendR plot
calendR(year = 2017,
start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01"
month = c(1,2,3,4))
#CalendR plot
calendR(year = 2017,
start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01"
month = c(1,2,3,4),
#CalendR plot
calendR(year = 2017,
start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
month = c(1,2,3,4),
special.days = c(9, 19, 56, 79, 102,  # Days to color
126, 257, 300, 342),
special.col = "lightblue",            # Color of the specified days
low.col = "white")
#CalendR plot
calendR(year = 2017,
start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
special.days = c(9, 19, 56, 79, 102,  # Days to color
126, 257, 300, 342),
special.col = "lightblue",            # Color of the specified days
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
special.days = c(9, 19, 56, 79, 102,  # Days to color
126, 257, 300, 342),
special.col = "lightblue",            # Color of the specified days
low.col = "white")
date("2017-01-01") - date("2017-04-01")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
special.days = 1:90,
special.col = "lightblue",            # Color of the specified days
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
special.days = 1:90,
special.col = "lightblue",            # Color of the specified days
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white") )
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
special.days = 1:90,
special.col = "lightblue",            # Color of the specified days
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
special.days = 1:90,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
special.days = 1:91,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
View(date_agg)
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = date_agg$n
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = date_agg$n,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
dim(date_agg)
dim(date_agg$n)
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = as.vector(date_agg$n),
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
as.vector(date_agg$n)
d <- as.vector(date_agg$n)
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days =d,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-02",
#special.days = 1:91,
special.days =d,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days =d,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = 1:91,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
count(1:91)
a <- 1:91
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = a,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = d,
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
rank(d)
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = rank(d),
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 0, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = rank(d),
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 1, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
ggplot(date_agg, aes(x = dt, y = n)) + geom_point() + geom_line()
#CalendR plot
calendR(year = 2017,
#start = "S",
start_date = "2017-01-01", # Custom start date
end_date = "2017-04-01",
#special.days = 1:91,
special.days = rank(d),
gradient = TRUE,      # Set gradient = TRUE to create the heatmap
special.col = rgb(1, 0, 1, alpha = 0.6), # Color of the gradient for the highest value
low.col = "white")
rank(d)
d
hist(d)
ggplot(date_agg, aes(n)) + geom_hist()
ggplot(date_agg, aes(n)) + geom_histogram()
ggplot(date_agg, aes(n)) + geom_histogram() + xlab("Daily Number of Rides")
#aggrgate by date and member type
table(bike$Bike.number)
#aggrgate by date and member type
table(bike$Member.type)
#how many bikes
count(distinct(bike$Bike.number))
distinct(bike$Bike.number)
#how many bikes
count(unique(bike$Bike.number))
#how many bikes
unique(bike$Bike.number)
#how many bikes
count(unique(bike$Bike.number))
#how many bikes
nrow(unique(bike$Bike.number))
#how many bikes
sum(unique(bike$Bike.number))
#how many bikes
tally(unique(bike$Bike.number))
#how many bikes
n(unique(bike$Bike.number))
n_distinct(bike$Bike.number)
bike %>% group_by(Member.type)
bike %>% group_by(Member.type) %>% summarise(c = tally(Member.type))
bike %>% count(Member.type)
biek %>% group_by(End.Date)
bike %>% group_by(End.Date)
bike %>% group_by(End.date)
bike %>% group_by(End.date) %>%  summarise(group = count(Member.type))
bike %>% group_by(dt) %>%  summarise(group = count(Member.type))
bike %>% group_by(dt)
bike %>% count(Member.type)
bike %>% count(Member.type, dt)
bike %>% count(dt, Member.type)
date_mem <- bike %>% count(dt, Member.type)
#daily ride by member type
ggplot(date_mem, aes(x = dt, y = n , color = Member.type) + geom_point()
#daily ride by member type
ggplot(date_mem, aes(x = dt, y = n , color = Member.type)) + geom_point()
#daily ride by member type
ggplot(date_mem, aes(x = dt, y = n , color = Member.type)) + geom_point()
#daily ride by member type
ggplot(date_mem, aes(x = dt, y = n , color = Member.type)) + geom_point() + geom_line()
## most/least poplar locations
bike %>% count(End.station)
## most/least poplar locations
bike %>% count(End.station) %>% sort()
## most/least poplar locations
bike %>% count(End.station) %>% arrange()
## most/least poplar locations
bike %>% count(End.station) %>% arrange(n)
## most/least poplar locations
bike %>% count(End.station) %>% arrange(desc(n))
## most/least poplar locations
top_loc <- bike %>% count(End.station) %>% arrange(desc(n))
head(top_loc)
head(top_loc,10)
hist(top_loc$n)
View(top_loc)
## most/least poplar locations
top_loc_end <- bike %>% count(End.station) %>% arrange(desc(n))
top_loc_start <- bike %>% count(Start.station) %>% arrange(desc(n))
head(top_loc_start,10)
citation()
